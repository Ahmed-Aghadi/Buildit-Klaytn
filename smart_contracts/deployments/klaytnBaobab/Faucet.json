{
  "address": "0x76cfdE04F691B93c9993Be24d5FE7667E7A8782C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onKIP37BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onKIP37Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x433cffc5f00f3fddbef84396e28231fdaa1353d1a898167c539277d479e8df00",
  "receipt": {
    "to": null,
    "from": "0x0de82DCC40B8468639251b089f8b4A4400022e04",
    "contractAddress": "0x76cfdE04F691B93c9993Be24d5FE7667E7A8782C",
    "transactionIndex": 3,
    "gasUsed": "441514",
    "logsBloom": "0x
    "blockHash": "0x1e283fde6add5b6765e9905f7c5854fbc11cef7e71df99542f8f63ce9bf4ce02",
    "transactionHash": "0x433cffc5f00f3fddbef84396e28231fdaa1353d1a898167c539277d479e8df00",
    "logs": [],
    "blockNumber": 139591492,
    "cumulativeGasUsed": "817543",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCA34FF4068f042203087D475805c4DD8347cE958"
  ],
  "numDeployments": 1,
  "solcInputHash": "f8ac31a76b81bc0864fbf2d9adec4820",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onKIP37BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onKIP37Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ado-contracts/=lib/ado-contracts/contracts/\",\":ado-contracts/contracts/=lib/ado-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":chainlink/=lib/chainlink-brownie-contracts/contracts/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":klaytn-contracts/=lib/klaytn-contracts/\",\":klaytn/=lib/klaytn-contracts/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":witnet-solidity-bridge/=lib/witnet-solidity-bridge/contracts/\",\":witnet-solidity-bridge/contracts/=lib/witnet-solidity-bridge/contracts/\"]},\"sources\":{\"lib/klaytn-contracts/contracts/KIP/token/KIP37/IKIP37.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP37/IKIP37.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC1155/IERC1155.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev Required interface of an KIP37 compliant contract, as defined in the\\n * http://kips.klaytn.com/KIPs/kip-37#kip37-interface[KIP].\\n *\\n */\\ninterface IKIP37 is IKIP13 {\\n    /**\\n     * @dev Emitted when `amount` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] amounts\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * http://kips.klaytn.com/KIPs/kip-37#metadata-extension[guarantees] that `value` will equal the value\\n     * returned by {IKIP37Metadata-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `owner`.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     */\\n    function balanceOf(address owner, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:kip37.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `owners` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``owner``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IKIP37Receiver-onKIP37Received} and return the\\n     * acceptance magic amount.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:kip37.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IKIP37Receiver-onKIP37BatchReceived} and return the\\n     * acceptance magic amount.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the total supply of the token type requested.\\n        @param _id      ID of the token\\n        @return         The supply of the token type requested\\n    */\\n    function totalSupply(uint256 _id) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x28a1b538b22834bb468fac4e52053f55c8c71c44566e771ac8bdc325d11e0e65\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP37/IKIP37Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP37/IKIP37Receiver.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC1155/IERC1155Receiver.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev\\n */\\ninterface IKIP37Receiver is IKIP13 {\\n    /**\\n     * @dev Handles the receipt of a single KIP37 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onKIP37Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param amount The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onKIP37Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onKIP37Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple KIP37 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onKIP37BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match amounts array)\\n     * @param amounts An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onKIP37BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onKIP37BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb6af200c120474e5edaf86cfd5ef659631cce8acd06f85a080266cc00f801248\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/utils/introspection/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the KIP13 standard as defined in the KIP.\\n *\\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\\n */\\ninterface IKIP13 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`.\\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\\n     * to learn more about how these ids are created.\\n     *\\n     * Requirements:\\n     *\\n     * - implementation of this function call must use less than 30 000 gas\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/metatx/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract ERC2771Context is Context {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable _trustedForwarder;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x84690ebda74336bdda266a1c10e4edb5e2488bf2ab018cfc0cf11693b743dff6\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\nimport {IKIP37Receiver} from \\\"klaytn/KIP/token/KIP37/IKIP37Receiver.sol\\\";\\nimport \\\"klaytn/KIP/token/KIP37/IKIP37.sol\\\";\\nimport \\\"klaytn/metatx/ERC2771Context.sol\\\";\\n\\ncontract Faucet is ERC2771Context {\\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {}\\n\\n    function getToken(address tokenAddress, uint256 tokenId) public {\\n        IKIP37(tokenAddress).safeTransferFrom(\\n            address(this),\\n            _msgSender(),\\n            tokenId,\\n            10,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    function onKIP37Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual returns (bytes4) {\\n        return IKIP37Receiver.onKIP37Received.selector;\\n    }\\n\\n    function onKIP37BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual returns (bytes4) {\\n        return IKIP37Receiver.onKIP37BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x7c58108c0972bc1fd07777ee1c36ae18ddbed6ee205a813646d7a36e5f03d306\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161056338038061056383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516104d261009160003960008181607601526101ae01526104d26000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806343d7cce614610051578063572b6c05146100665780639b49e332146100bb578063e78b3325146100f3575b600080fd5b61006461005f36600461020a565b610112565b005b6100a6610074366004610234565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b6100da6100c936600461038d565b634da4f19960e11b95945050505050565b6040516001600160e01b031990911681526020016100b2565b6100da610101366004610437565b63e78b332560e01b95945050505050565b816001600160a01b031663f242432a3061012a6101aa565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052600a606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561018e57600080fd5b505af11580156101a2573d6000803e3d6000fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e9575060131936013560601c90565b503390565b80356001600160a01b038116811461020557600080fd5b919050565b6000806040838503121561021d57600080fd5b610226836101ee565b946020939093013593505050565b60006020828403121561024657600080fd5b61024f826101ee565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561029557610295610256565b604052919050565b600082601f8301126102ae57600080fd5b8135602067ffffffffffffffff8211156102ca576102ca610256565b8160051b6102d982820161026c565b92835284810182019282810190878511156102f357600080fd5b83870192505b84831015610312578235825291830191908301906102f9565b979650505050505050565b600082601f83011261032e57600080fd5b813567ffffffffffffffff81111561034857610348610256565b61035b601f8201601f191660200161026c565b81815284602083860101111561037057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156103a557600080fd5b6103ae866101ee565b94506103bc602087016101ee565b9350604086013567ffffffffffffffff808211156103d957600080fd5b6103e589838a0161029d565b945060608801359150808211156103fb57600080fd5b61040789838a0161029d565b9350608088013591508082111561041d57600080fd5b5061042a8882890161031d565b9150509295509295909350565b600080600080600060a0868803121561044f57600080fd5b610458866101ee565b9450610466602087016101ee565b93506040860135925060608601359150608086013567ffffffffffffffff81111561049057600080fd5b61042a8882890161031d56fea26469706673582212205dba581efcb5522e7096c5996027f793d51fe2fb3d49a4ad9b76af672cd26fbd64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806343d7cce614610051578063572b6c05146100665780639b49e332146100bb578063e78b3325146100f3575b600080fd5b61006461005f36600461020a565b610112565b005b6100a6610074366004610234565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b6100da6100c936600461038d565b634da4f19960e11b95945050505050565b6040516001600160e01b031990911681526020016100b2565b6100da610101366004610437565b63e78b332560e01b95945050505050565b816001600160a01b031663f242432a3061012a6101aa565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052600a606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561018e57600080fd5b505af11580156101a2573d6000803e3d6000fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e9575060131936013560601c90565b503390565b80356001600160a01b038116811461020557600080fd5b919050565b6000806040838503121561021d57600080fd5b610226836101ee565b946020939093013593505050565b60006020828403121561024657600080fd5b61024f826101ee565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561029557610295610256565b604052919050565b600082601f8301126102ae57600080fd5b8135602067ffffffffffffffff8211156102ca576102ca610256565b8160051b6102d982820161026c565b92835284810182019282810190878511156102f357600080fd5b83870192505b84831015610312578235825291830191908301906102f9565b979650505050505050565b600082601f83011261032e57600080fd5b813567ffffffffffffffff81111561034857610348610256565b61035b601f8201601f191660200161026c565b81815284602083860101111561037057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156103a557600080fd5b6103ae866101ee565b94506103bc602087016101ee565b9350604086013567ffffffffffffffff808211156103d957600080fd5b6103e589838a0161029d565b945060608801359150808211156103fb57600080fd5b61040789838a0161029d565b9350608088013591508082111561041d57600080fd5b5061042a8882890161031d565b9150509295509295909350565b600080600080600060a0868803121561044f57600080fd5b610458866101ee565b9450610466602087016101ee565b93506040860135925060608601359150608086013567ffffffffffffffff81111561049057600080fd5b61042a8882890161031d56fea26469706673582212205dba581efcb5522e7096c5996027f793d51fe2fb3d49a4ad9b76af672cd26fbd64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}