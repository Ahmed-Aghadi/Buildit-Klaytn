{
  "address": "0xdF78D5A57DCFf31Ca18978b56760867010AEBC2E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_perSize",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseUri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_utilsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidXIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidYIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LandAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SizeNotDivisibleByPerSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroPerSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroSize",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "land",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "xIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "landCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "map",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "xIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yIndex",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onKIP37BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onKIP37Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "utilId",
          "type": "uint256"
        }
      ],
      "name": "placeItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "x",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "y",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "utilId",
          "type": "uint256[]"
        }
      ],
      "name": "placeItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "removeItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "size",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "utilId",
          "type": "uint256"
        }
      ],
      "name": "updateItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "x",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "y",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "utilId",
          "type": "uint256[]"
        }
      ],
      "name": "updateItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1c28c3bf9ea82bd3ade82526cbe3a2ecfc7c3a5631c549db407074a133d8b6b",
  "receipt": {
    "to": null,
    "from": "0x0de82DCC40B8468639251b089f8b4A4400022e04",
    "contractAddress": "0xdF78D5A57DCFf31Ca18978b56760867010AEBC2E",
    "transactionIndex": 2,
    "gasUsed": "2820948",
    "logsBloom": "0x
    "blockHash": "0xdfaddfe48144d11ee4df4195ac5911df9874d34c8a65b00893de2da13d19c634",
    "transactionHash": "0xa1c28c3bf9ea82bd3ade82526cbe3a2ecfc7c3a5631c549db407074a133d8b6b",
    "logs": [],
    "blockNumber": 139591482,
    "cumulativeGasUsed": "3001096",
    "status": 1,
    "byzantium": true
  },
  "args": [
    15,
    5,
    "https://www.example.com/map/",
    "0x11DA0f57086a19977E46B548b64166411d839a30",
    "0xCA34FF4068f042203087D475805c4DD8347cE958"
  ],
  "numDeployments": 1,
  "solcInputHash": "f8ac31a76b81bc0864fbf2d9adec4820",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_perSize\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseUri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_utilsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidXIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidYIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LandAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SizeNotDivisibleByPerSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPerSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroSize\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"land\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"xIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yIndex\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onKIP37BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onKIP37Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"perSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilId\",\"type\":\"uint256\"}],\"name\":\"placeItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"utilId\",\"type\":\"uint256[]\"}],\"name\":\"placeItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"removeItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilId\",\"type\":\"uint256\"}],\"name\":\"updateItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"x\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"y\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"utilId\",\"type\":\"uint256[]\"}],\"name\":\"updateItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IKIP17-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IKIP17-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IKIP17-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IKIP17-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IKIP17Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IKIP17-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IKIP17-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IKIP17-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IKIP17-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IKIP13-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IKIP17Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IKIP17-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Map.sol\":\"Map\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ado-contracts/=lib/ado-contracts/contracts/\",\":ado-contracts/contracts/=lib/ado-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":chainlink/=lib/chainlink-brownie-contracts/contracts/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":klaytn-contracts/=lib/klaytn-contracts/\",\":klaytn/=lib/klaytn-contracts/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":witnet-solidity-bridge/=lib/witnet-solidity-bridge/contracts/\",\":witnet-solidity-bridge/contracts/=lib/witnet-solidity-bridge/contracts/\"]},\"sources\":{\"lib/klaytn-contracts/contracts/KIP/interfaces/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/interfaces/IKIP13.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IKIP13.sol\\\";\\n\",\"keccak256\":\"0x538533dcc430536d456ae9e781680ca578ce70bab6b2db7cc18422d2babfd030\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP17/IKIP17.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IKIP17 is IKIP13 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x12805039249aec575fc0ab02485da91649f2740f35eed4c08572c095513cc0d3\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP17/IKIP17Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17Receiver.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721Receiver.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title KIP17 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from KIP17 asset contracts.\\n */\\ninterface IKIP17Receiver {\\n    /**\\n     * @dev Whenever an {IKIP17} `tokenId` token is transferred to this contract via {IKIP17-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IKIP17Receiver.onKIp17Received.selector`.\\n     */\\n    function onKIP17Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x6cd2dc3fa3f2656adb92baddde366f99ec6c9db6e06a1e7d9be345050df2b15d\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP17/KIP17.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/KIP17.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/ERC721.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/KIP13.sol\\\";\\nimport \\\"./extensions/IKIP17Metadata.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\nimport \\\"../../../utils/Strings.sol\\\";\\nimport \\\"./IKIP17Receiver.sol\\\";\\nimport \\\"../../../token/ERC721/IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of https://kips.klaytn.com/KIPs/kip-17 Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {KIP17Enumerable}.\\n */\\ncontract KIP17 is Context, KIP13, IKIP17, IKIP17Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IKIP13-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13, IKIP13) returns (bool) {\\n        return\\n            interfaceId == type(IKIP17).interfaceId ||\\n            interfaceId == type(IKIP17Metadata).interfaceId ||\\n            KIP13.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"KIP17: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"KIP17: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"KIP17Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = KIP17.ownerOf(tokenId);\\n        require(to != owner, \\\"KIP17: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"KIP17: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"KIP17: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"KIP17: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"KIP17: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the KIP17/ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IKIP17Receiver-onKIP17Received}\\n     *   OR {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(\\n            _checkOnKIP17Received(from, to, tokenId, _data) || _checkOnERC721Received(from, to, tokenId, _data),\\n            \\\"KIP17: transfer to non IKIP17Receiver/IERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"KIP17: operator query for nonexistent token\\\");\\n        address owner = KIP17.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IKIP17Receiver-onKIP17Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-KIP17-_safeMint-address-uint256-}[`_safeMint`], with an additional `_data` parameter which is\\n     * forwarded in {IKIP17Receiver-onKIP17Received} OR {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnKIP17Received(address(0), to, tokenId, _data) ||\\n                _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"KIP17: transfer to non IKIP17Receiver/IERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"KIP17: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"KIP17: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = KIP17.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(KIP17.ownerOf(tokenId) == from, \\\"KIP17: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"KIP17: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(KIP17.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"KIP17: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IKIP17Receiver-onKIP17Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnKIP17Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IKIP17Receiver(to).onKIP17Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IKIP17Receiver.onKIP17Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    return false;\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    return false;\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xf0d3d09792dc1927b44fd220c27823db8e994b3dfecd5cc504f59db66e2518ee\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP17/extensions/IKIP17Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/extensions/IKIP17Metadata.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/extensions/IERC721Metadata.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IKIP17.sol\\\";\\n\\n/**\\n * @title KIP-17 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://kips.klaytn.com/KIPs/kip-17#metadata-extension\\n */\\ninterface IKIP17Metadata is IKIP17 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x9f063faf0b0f42da2557feaa370cf92996be09899c196dd0b99f99ac4242401e\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP37/IKIP37.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP37/IKIP37.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC1155/IERC1155.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev Required interface of an KIP37 compliant contract, as defined in the\\n * http://kips.klaytn.com/KIPs/kip-37#kip37-interface[KIP].\\n *\\n */\\ninterface IKIP37 is IKIP13 {\\n    /**\\n     * @dev Emitted when `amount` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] amounts\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * http://kips.klaytn.com/KIPs/kip-37#metadata-extension[guarantees] that `value` will equal the value\\n     * returned by {IKIP37Metadata-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `owner`.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     */\\n    function balanceOf(address owner, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:kip37.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `owners` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``owner``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IKIP37Receiver-onKIP37Received} and return the\\n     * acceptance magic amount.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:kip37.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IKIP37Receiver-onKIP37BatchReceived} and return the\\n     * acceptance magic amount.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the total supply of the token type requested.\\n        @param _id      ID of the token\\n        @return         The supply of the token type requested\\n    */\\n    function totalSupply(uint256 _id) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x28a1b538b22834bb468fac4e52053f55c8c71c44566e771ac8bdc325d11e0e65\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/token/KIP37/IKIP37Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP37/IKIP37Receiver.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC1155/IERC1155Receiver.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev\\n */\\ninterface IKIP37Receiver is IKIP13 {\\n    /**\\n     * @dev Handles the receipt of a single KIP37 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onKIP37Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param amount The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onKIP37Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onKIP37Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple KIP37 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onKIP37BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match amounts array)\\n     * @param amounts An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onKIP37BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onKIP37BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb6af200c120474e5edaf86cfd5ef659631cce8acd06f85a080266cc00f801248\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/utils/introspection/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the KIP13 standard as defined in the KIP.\\n *\\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\\n */\\ninterface IKIP13 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`.\\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\\n     * to learn more about how these ids are created.\\n     *\\n     * Requirements:\\n     *\\n     * - implementation of this function call must use less than 30 000 gas\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/KIP/utils/introspection/KIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/KIP13.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/ERC165.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/IKIP13.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IKIP13} interface.\\n *\\n * Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract KIP13 is IKIP13 {\\n    /**\\n     * @dev See {IKIP13-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IKIP13).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9efe61dd73941b281759ca65eaaa0338c9a4105ba8c5d5c5b4998438830c8ed9\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/metatx/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract ERC2771Context is Context {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable _trustedForwarder;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x84690ebda74336bdda266a1c10e4edb5e2488bf2ab018cfc0cf11693b743dff6\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/klaytn-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xca92905e1626e8567483de21bc1208284865ed7be71d54ca320a140ac25fd290\",\"license\":\"MIT\"},\"src/Map.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\nimport \\\"klaytn/utils/Strings.sol\\\";\\nimport \\\"klaytn/metatx/ERC2771Context.sol\\\";\\nimport \\\"klaytn/KIP/token/KIP17/KIP17.sol\\\";\\nimport \\\"klaytn/KIP/token/KIP37/IKIP37.sol\\\";\\nimport {IKIP37Receiver} from \\\"klaytn/KIP/token/KIP37/IKIP37Receiver.sol\\\";\\n\\nerror ZeroSize();\\nerror ZeroPerSize();\\nerror SizeNotDivisibleByPerSize();\\nerror InvalidXIndex();\\nerror InvalidYIndex();\\nerror LandAlreadyOwned();\\nerror NotOwner();\\n\\nerror InvalidLength();\\n\\ncontract Map is ERC2771Context, KIP17 {\\n    // // rectangular land with coordinates of corners as (x,y), (x,y+perSize), (x+perSize,y), (x+perSize,y+perSize)\\n    struct Land {\\n        uint256 xIndex;\\n        uint256 yIndex;\\n    }\\n    uint256 public size;\\n    uint256 public perSize;\\n    uint256 public landCount;\\n    string public baseUri;\\n    uint256 public utilCount;\\n    address public utilsAddress;\\n\\n    // x/perSize,y/perSize to LandId\\n    // [ (x/perSize,y/perSize) to LandId ] of rectangular land with coordinates of corners as (x,y), (x,y+perSize), (x+perSize,y), (x+perSize,y+perSize)\\n    mapping(uint256 => mapping(uint256 => uint256)) public landIds;\\n    // mapping of LandId to Land (xIndex, yIndex)\\n    mapping(uint256 => Land) public land;\\n\\n    // x,y to utilId\\n    mapping(uint256 => mapping(uint256 => uint256)) public map;\\n\\n    constructor(\\n        uint256 _size,\\n        uint256 _perSize,\\n        string memory _baseUri,\\n        address _utilsAddress,\\n        address trustedForwarder\\n    ) ERC2771Context(trustedForwarder) KIP17(\\\"Map\\\", \\\"MAP\\\") {\\n        if (_size == 0) revert ZeroSize();\\n        if (_perSize == 0) revert ZeroPerSize();\\n        size = _size;\\n        perSize = _perSize;\\n        if (_size % perSize != 0) revert SizeNotDivisibleByPerSize();\\n        baseUri = _baseUri;\\n        utilsAddress = _utilsAddress;\\n    }\\n\\n    function mint(uint256 xIndex, uint256 yIndex) public returns (uint256) {\\n        if (xIndex >= size / perSize) revert InvalidXIndex();\\n        if (yIndex >= size / perSize) revert InvalidYIndex();\\n        if (landIds[xIndex][yIndex] != 0) revert LandAlreadyOwned();\\n        landCount += 1;\\n        // land[id] = Land(x, y);\\n        landIds[xIndex][yIndex] = landCount;\\n        land[landCount] = Land(xIndex, yIndex);\\n        _mint(_msgSender(), landCount);\\n        return landCount;\\n    }\\n\\n    function placeItem(uint256 x, uint256 y, uint256 utilId) public {\\n        if (_msgSender() != ownerOf(landIds[x / perSize][y / perSize]))\\n            revert NotOwner();\\n        IKIP37 utils = IKIP37(utilsAddress);\\n        if (map[x][y] != 0) {\\n            utils.safeTransferFrom(\\n                address(this),\\n                _msgSender(),\\n                map[x][y],\\n                1,\\n                \\\"\\\"\\n            );\\n        }\\n        utils.safeTransferFrom(_msgSender(), address(this), utilId, 1, \\\"\\\");\\n        map[x][y] = utilId;\\n    }\\n\\n    function removeItem(uint256 x, uint256 y) public {\\n        if (_msgSender() != ownerOf(landIds[x / perSize][y / perSize]))\\n            revert NotOwner();\\n        IKIP37 utils = IKIP37(utilsAddress);\\n        if (map[x][y] != 0) {\\n            utils.safeTransferFrom(\\n                address(this),\\n                _msgSender(),\\n                map[x][y],\\n                1,\\n                \\\"\\\"\\n            );\\n        }\\n        map[x][y] = 0;\\n    }\\n\\n    function updateItem(uint256 x, uint256 y, uint256 utilId) public {\\n        if (utilId == 0) {\\n            removeItem(x, y);\\n        } else {\\n            placeItem(x, y, utilId);\\n        }\\n    }\\n\\n    function placeItems(\\n        uint256[] memory x,\\n        uint256[] memory y,\\n        uint256[] memory utilId\\n    ) public {\\n        if (x.length != y.length) revert InvalidLength();\\n        if (x.length != utilId.length) revert InvalidLength();\\n        for (uint256 i = 0; i < x.length; i++) {\\n            placeItem(x[i], y[i], utilId[i]);\\n        }\\n    }\\n\\n    function updateItems(\\n        uint256[] memory x,\\n        uint256[] memory y,\\n        uint256[] memory utilId\\n    ) public {\\n        if (x.length != y.length) revert InvalidLength();\\n        if (x.length != utilId.length) revert InvalidLength();\\n        for (uint256 i = 0; i < x.length; i++) {\\n            updateItem(x[i], y[i], utilId[i]);\\n        }\\n    }\\n\\n    function tokenURI(\\n        uint256 id\\n    ) public view virtual override returns (string memory) {\\n        return string.concat(baseUri, Strings.toString(id));\\n    }\\n\\n    function onKIP37Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual returns (bytes4) {\\n        return IKIP37Receiver.onKIP37Received.selector;\\n    }\\n\\n    function onKIP37BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual returns (bytes4) {\\n        return IKIP37Receiver.onKIP37BatchReceived.selector;\\n    }\\n\\n    function _msgSender()\\n        internal\\n        view\\n        virtual\\n        override(Context, ERC2771Context)\\n        returns (address sender)\\n    {\\n        return ERC2771Context._msgSender();\\n    }\\n\\n    function _msgData()\\n        internal\\n        view\\n        virtual\\n        override(Context, ERC2771Context)\\n        returns (bytes calldata)\\n    {\\n        return ERC2771Context._msgData();\\n    }\\n}\\n\",\"keccak256\":\"0xdba80716087425d7514f8e95f6572511f10af11ee04dbd12d90b51a2a0bfa739\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063870fc3471161010f578063ae9deae4116100a2578063d7bce65811610071578063d7bce658146104a1578063e78b3325146104aa578063e985e9c5146104c9578063fb9bb97f1461050557600080fd5b8063ae9deae414610469578063b88d4fde14610472578063baacbe9b14610485578063c87b56dd1461048e57600080fd5b80639abc8320116100de5780639abc8320146103eb5780639b49e332146103f3578063a22cb4651461042b578063a90b91281461043e57600080fd5b8063870fc347146103b4578063949d225d146103c757806395d89b41146103d057806395f5b17a146103d857600080fd5b806323b872dd11610187578063572b6c0511610156578063572b6c05146103125780636352211e1461035257806370a0823114610365578063861e46561461037857600080fd5b806323b872dd146102c657806342842e0e146102d9578063512c4aaf146102ec578063539447d4146102ff57600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630d0637b31461026757806319579a541461027a5780631b2ef1ca146102b357600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f83660046118b2565b610518565b60405190151581526020015b60405180910390f35b61021a61056a565b604051610209919061192e565b61023a610235366004611941565b6105fc565b6040516001600160a01b039091168152602001610209565b610265610260366004611976565b610695565b005b610265610275366004611a67565b6107b2565b6102a5610288366004611aef565b600c60209081526000928352604080842090915290825290205481565b604051908152602001610209565b6102a56102c1366004611aef565b610870565b6102656102d4366004611b11565b610983565b6102656102e7366004611b11565b6109bb565b600b5461023a906001600160a01b031681565b61026561030d366004611b4d565b6109d6565b6101fd610320366004611b79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61023a610360366004611941565b6109f3565b6102a5610373366004611b79565b610a69565b61039f610386366004611941565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610209565b6102656103c2366004611aef565b610aee565b6102a560065481565b61021a610c44565b6102656103e6366004611b4d565b610c53565b61021a610e01565b610412610401366004611c04565b634da4f19960e11b95945050505050565b6040516001600160e01b03199091168152602001610209565b610265610439366004611cae565b610e8f565b6102a561044c366004611aef565b600e60209081526000928352604080842090915290825290205481565b6102a560075481565b610265610480366004611cea565b610ea5565b6102a5600a5481565b61021a61049c366004611941565b610ede565b6102a560085481565b6104126104b8366004611d52565b63e78b332560e01b95945050505050565b6101fd6104d7366004611db7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610265610513366004611a67565b610f12565b60006001600160e01b031982166380ac58cd60e01b148061054957506001600160e01b03198216635b5e139f60e01b145b8061056457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461057990611dea565b80601f01602080910402602001604051908101604052809291908181526020018280546105a590611dea565b80156105f25780601f106105c7576101008083540402835291602001916105f2565b820191906000526020600020905b8154815290600101906020018083116105d557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106795760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a20617070726f76656420717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106a0826109f3565b9050806001600160a01b0316836001600160a01b0316036107035760405162461bcd60e51b815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e65726044820152606401610670565b806001600160a01b0316610715610fca565b6001600160a01b031614806107315750610731816104d7610fca565b6107a35760405162461bcd60e51b815260206004820152603760248201527f4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e60448201527f6572206e6f7220617070726f76656420666f7220616c6c0000000000000000006064820152608401610670565b6107ad8383610fd9565b505050565b81518351146107d45760405163251f56a160e21b815260040160405180910390fd5b80518351146107f65760405163251f56a160e21b815260040160405180910390fd5b60005b835181101561086a5761085884828151811061081757610817611e24565b602002602001015184838151811061083157610831611e24565b602002602001015184848151811061084b5761084b611e24565b6020026020010151610c53565b8061086281611e50565b9150506107f9565b50505050565b60006007546006546108829190611e7f565b83106108a15760405163c24c736760e01b815260040160405180910390fd5b6007546006546108b19190611e7f565b82106108d057604051634665aadb60e11b815260040160405180910390fd5b6000838152600c6020908152604080832085845290915290205415610908576040516306a9893b60e51b815260040160405180910390fd5b60016008600082825461091b9190611e93565b90915550506008546000848152600c60209081526040808320868452825280832084905580518082018252878152808301878152948452600d909252909120905181559051600190910155610979610971610fca565b600854611047565b5060085492915050565b61099461098e610fca565b82611189565b6109b05760405162461bcd60e51b815260040161067090611eab565b6107ad83838361127f565b6107ad83838360405180602001604052806000815250610ea5565b806000036109e8576107ad8383610aee565b6107ad838383610c53565b6000818152600260205260408120546001600160a01b0316806105645760405162461bcd60e51b815260206004820152602860248201527f4b495031373a206f776e657220717565727920666f72206e6f6e657869737465604482015267373a103a37b5b2b760c11b6064820152608401610670565b60006001600160a01b038216610ad25760405162461bcd60e51b815260206004820152602860248201527f4b495031373a2061646472657373207a65726f206973206e6f7420612076616c60448201526734b21037bbb732b960c11b6064820152608401610670565b506001600160a01b031660009081526003602052604090205490565b610b35600c600060075485610b039190611e7f565b8152602001908152602001600020600060075484610b219190611e7f565b8152602001908152602001600020546109f3565b6001600160a01b0316610b46610fca565b6001600160a01b031614610b6d576040516330cd747160e01b815260040160405180910390fd5b600b546000838152600e602090815260408083208584529091529020546001600160a01b039091169015610c2757806001600160a01b031663f242432a30610bb3610fca565b6000878152600e60209081526040808320898452909152908190205490516001600160e01b031960e086901b168152610bf493929190600190600401611efb565b600060405180830381600087803b158015610c0e57600080fd5b505af1158015610c22573d6000803e3d6000fd5b505050505b506000918252600e60209081526040808420928452919052812055565b60606001805461057990611dea565b610c86600c600060075486610c689190611e7f565b8152602001908152602001600020600060075485610b219190611e7f565b6001600160a01b0316610c97610fca565b6001600160a01b031614610cbe576040516330cd747160e01b815260040160405180910390fd5b600b546000848152600e602090815260408083208684529091529020546001600160a01b039091169015610d7857806001600160a01b031663f242432a30610d04610fca565b6000888152600e602090815260408083208a8452909152908190205490516001600160e01b031960e086901b168152610d4593929190600190600401611efb565b600060405180830381600087803b158015610d5f57600080fd5b505af1158015610d73573d6000803e3d6000fd5b505050505b806001600160a01b031663f242432a610d8f610fca565b308560016040518563ffffffff1660e01b8152600401610db29493929190611efb565b600060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b50505060009485525050600e60209081526040808520938552929052912055565b60098054610e0e90611dea565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3a90611dea565b8015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b505050505081565b610ea1610e9a610fca565b8383611419565b5050565b610eb6610eb0610fca565b83611189565b610ed25760405162461bcd60e51b815260040161067090611eab565b61086a848484846114e7565b60606009610eeb8361158c565b604051602001610efc929190611f4f565b6040516020818303038152906040529050919050565b8151835114610f345760405163251f56a160e21b815260040160405180910390fd5b8051835114610f565760405163251f56a160e21b815260040160405180910390fd5b60005b835181101561086a57610fb8848281518110610f7757610f77611e24565b6020026020010151848381518110610f9157610f91611e24565b6020026020010151848481518110610fab57610fab611e24565b60200260200101516109d6565b80610fc281611e50565b915050610f59565b6000610fd461168d565b905090565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061100e826109f3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b03821661109d5760405162461bcd60e51b815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610670565b6000818152600260205260409020546001600160a01b0316156111025760405162461bcd60e51b815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e74656400000000006044820152606401610670565b6001600160a01b038216600090815260036020526040812080546001929061112b908490611e93565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260408120546001600160a01b03166112015760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a206f70657261746f7220717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b6064820152608401610670565b600061120c836109f3565b9050806001600160a01b0316846001600160a01b0316148061125357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806112775750836001600160a01b031661126c846105fc565b6001600160a01b0316145b949350505050565b826001600160a01b0316611292826109f3565b6001600160a01b0316146112f45760405162461bcd60e51b8152602060048201526024808201527f4b495031373a207472616e736665722066726f6d20696e636f7272656374206f6044820152633bb732b960e11b6064820152608401610670565b6001600160a01b0382166113565760405162461bcd60e51b815260206004820152602360248201527f4b495031373a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610670565b611361600082610fd9565b6001600160a01b038316600090815260036020526040812080546001929061138a908490611ff5565b90915550506001600160a01b03821660009081526003602052604081208054600192906113b8908490611e93565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361147a5760405162461bcd60e51b815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c657200000000000000006044820152606401610670565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114f284848461127f565b6114fe848484846116d1565b806115105750611510848484846117cb565b61086a5760405162461bcd60e51b815260206004820152604160248201527f4b495031373a207472616e7366657220746f206e6f6e20494b4950313752656360448201527f65697665722f49455243373231526563656976657220696d706c656d656e74656064820152603960f91b608482015260a401610670565b6060816000036115b35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115dd57806115c781611e50565b91506115d69050600a83611e7f565b91506115b7565b60008167ffffffffffffffff8111156115f8576115f86119a0565b6040519080825280601f01601f191660200182016040528015611622576020820181803683370190505b5090505b841561127757611637600183611ff5565b9150611644600a8661200c565b61164f906030611e93565b60f81b81838151811061166457611664611e24565b60200101906001600160f81b031916908160001a905350611686600a86611e7f565b9450611626565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036116cc575060131936013560601c90565b503390565b60006001600160a01b0384163b156117c057836001600160a01b0316636745782b6116fa610fca565b8786866040518563ffffffff1660e01b815260040161171c9493929190612020565b6020604051808303816000875af1925050508015611757575060408051601f3d908101601f191682019092526117549181019061205d565b60015b6117a6573d808015611785576040519150601f19603f3d011682016040523d82523d6000602084013e61178a565b606091505b50805160000361179e576000915050611277565b805181602001fd5b6001600160e01b031916636745782b60e01b149050611277565b506001949350505050565b60006001600160a01b0384163b156117c057836001600160a01b031663150b7a026117f4610fca565b8786866040518563ffffffff1660e01b81526004016118169493929190612020565b6020604051808303816000875af1925050508015611851575060408051601f3d908101601f1916820190925261184e9181019061205d565b60015b61187f573d808015611785576040519150601f19603f3d011682016040523d82523d6000602084013e61178a565b6001600160e01b031916630a85bd0160e11b149050611277565b6001600160e01b0319811681146118af57600080fd5b50565b6000602082840312156118c457600080fd5b81356118cf81611899565b9392505050565b60005b838110156118f15781810151838201526020016118d9565b8381111561086a5750506000910152565b6000815180845261191a8160208601602086016118d6565b601f01601f19169290920160200192915050565b6020815260006118cf6020830184611902565b60006020828403121561195357600080fd5b5035919050565b80356001600160a01b038116811461197157600080fd5b919050565b6000806040838503121561198957600080fd5b6119928361195a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119df576119df6119a0565b604052919050565b600082601f8301126119f857600080fd5b8135602067ffffffffffffffff821115611a1457611a146119a0565b8160051b611a238282016119b6565b9283528481018201928281019087851115611a3d57600080fd5b83870192505b84831015611a5c57823582529183019190830190611a43565b979650505050505050565b600080600060608486031215611a7c57600080fd5b833567ffffffffffffffff80821115611a9457600080fd5b611aa0878388016119e7565b94506020860135915080821115611ab657600080fd5b611ac2878388016119e7565b93506040860135915080821115611ad857600080fd5b50611ae5868287016119e7565b9150509250925092565b60008060408385031215611b0257600080fd5b50508035926020909101359150565b600080600060608486031215611b2657600080fd5b611b2f8461195a565b9250611b3d6020850161195a565b9150604084013590509250925092565b600080600060608486031215611b6257600080fd5b505081359360208301359350604090920135919050565b600060208284031215611b8b57600080fd5b6118cf8261195a565b600082601f830112611ba557600080fd5b813567ffffffffffffffff811115611bbf57611bbf6119a0565b611bd2601f8201601f19166020016119b6565b818152846020838601011115611be757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611c1c57600080fd5b611c258661195a565b9450611c336020870161195a565b9350604086013567ffffffffffffffff80821115611c5057600080fd5b611c5c89838a016119e7565b94506060880135915080821115611c7257600080fd5b611c7e89838a016119e7565b93506080880135915080821115611c9457600080fd5b50611ca188828901611b94565b9150509295509295909350565b60008060408385031215611cc157600080fd5b611cca8361195a565b915060208301358015158114611cdf57600080fd5b809150509250929050565b60008060008060808587031215611d0057600080fd5b611d098561195a565b9350611d176020860161195a565b925060408501359150606085013567ffffffffffffffff811115611d3a57600080fd5b611d4687828801611b94565b91505092959194509250565b600080600080600060a08688031215611d6a57600080fd5b611d738661195a565b9450611d816020870161195a565b93506040860135925060608601359150608086013567ffffffffffffffff811115611dab57600080fd5b611ca188828901611b94565b60008060408385031215611dca57600080fd5b611dd38361195a565b9150611de16020840161195a565b90509250929050565b600181811c90821680611dfe57607f821691505b602082108103611e1e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e6257611e62611e3a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611e8e57611e8e611e69565b500490565b60008219821115611ea657611ea6611e3a565b500190565b60208082526030908201527f4b495031373a207472616e736665722063616c6c6572206973206e6f74206f7760408201526f1b995c881b9bdc88185c1c1c9bdd995960821b606082015260800190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60008151611f458185602086016118d6565b9290920192915050565b600080845481600182811c915080831680611f6b57607f831692505b60208084108203611f8a57634e487b7160e01b86526022600452602486fd5b818015611f9e5760018114611faf57611fdc565b60ff19861689528489019650611fdc565b60008b81526020902060005b86811015611fd45781548b820152908501908301611fbb565b505084890196505b505050505050611fec8185611f33565b95945050505050565b60008282101561200757612007611e3a565b500390565b60008261201b5761201b611e69565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061205390830184611902565b9695505050505050565b60006020828403121561206f57600080fd5b81516118cf8161189956fea264697066735822122010f91135dcfea139471d5cb78c9660dbb204b8f9726168f1ddcabbc99404fe7064736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IKIP17-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IKIP17-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IKIP17-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IKIP17-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IKIP17Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IKIP17-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IKIP17-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IKIP17-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IKIP17-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IKIP13-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IKIP17Metadata-symbol}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IKIP17-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 506,
        "contract": "src/Map.sol:Map",
        "label": "_name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 508,
        "contract": "src/Map.sol:Map",
        "label": "_symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 512,
        "contract": "src/Map.sol:Map",
        "label": "_owners",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 516,
        "contract": "src/Map.sol:Map",
        "label": "_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 520,
        "contract": "src/Map.sol:Map",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 526,
        "contract": "src/Map.sol:Map",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4918,
        "contract": "src/Map.sol:Map",
        "label": "size",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 4920,
        "contract": "src/Map.sol:Map",
        "label": "perSize",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 4922,
        "contract": "src/Map.sol:Map",
        "label": "landCount",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 4924,
        "contract": "src/Map.sol:Map",
        "label": "baseUri",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 4926,
        "contract": "src/Map.sol:Map",
        "label": "utilCount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 4928,
        "contract": "src/Map.sol:Map",
        "label": "utilsAddress",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 4934,
        "contract": "src/Map.sol:Map",
        "label": "landIds",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 4939,
        "contract": "src/Map.sol:Map",
        "label": "land",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_struct(Land)4916_storage)"
      },
      {
        "astId": 4945,
        "contract": "src/Map.sol:Map",
        "label": "map",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Land)4916_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Map.Land)",
        "numberOfBytes": "32",
        "value": "t_struct(Land)4916_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Land)4916_storage": {
        "encoding": "inplace",
        "label": "struct Map.Land",
        "members": [
          {
            "astId": 4913,
            "contract": "src/Map.sol:Map",
            "label": "xIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4915,
            "contract": "src/Map.sol:Map",
            "label": "yIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}